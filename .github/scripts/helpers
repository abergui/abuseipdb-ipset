#!/usr/bin/env bash

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# HELPERS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
R="\e[0m"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Time / Benchmark
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
time-now() {
  date +%s.%N
}

benchmark() {
  local start=$1
  local end=${2:-$(time-now)}
  printf %.2f $(echo "$end - $start" | bc -l)
}

timestamp() {
  printf "\n%-65s %s\n" "⌛ Time: $(benchmark $start)s" "⌛ Total: $(benchmark $initstart)s"
}

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Statistics / Information
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
show-cache-folders() {
  ✨ "Cache folder: ($ACTIONS_CACHE_DIR)"
  cd $ACTIONS_CACHE_DIR
  find . -maxdepth 1 -type d -not -iname '.git' -print0 | xargs -0 -I {} sh -c "printf '%-24s' '{}' ; du -sh --apparent-size {} | cut -f 1" \;
}

show-cache-structure() {
  ✨ "Cache structure ($ACTIONS_CACHE_DIR)"
  cd $ACTIONS_CACHE_DIR
  find . -maxdepth 1 -type d -not -iname '.git' -print0 | xargs -0 -I {} sh -c "tree -L 2 -F --noreport {}; echo" \;
}

show-system-information() {
  while IFS=":" read -r a b; do
    case $a in
    "MemTotal")
      ((mem_used += ${b/kB/}))
      mem_total="${b/kB/}"
      ;;
    "MemAvailable")
      mem_avail=${b/kB/}
      ;;
    esac
  done < /proc/meminfo

  mem_used=$(((mem_total - mem_avail) / 1024))
  mem_total="$((mem_total / 1024))"
  cores="$(nproc --all)"

  echo "Cores:         $cores"
  echo "Memory used:   $mem_used Mb"
  echo "Memory total:  $mem_total Mb"
}


dump-env() {
  TOKEN="dump-env-$RANDOM-$RANDOM"

  echo
  echo "::group::Environment variables"
  echo "::stop-commands::$TOKEN"
  env|sort| egrep --color=always '^[^=]+' || true
  echo "::$TOKEN::"
  echo "::endgroup::"
}

dump-context() {
  TOKEN="dump-context-$RANDOM-$RANDOM"
  command -v gron || (mkdir -p ~/.local/bin &> /dev/null && cd "$_" && wget -q -nv "https://raw.githubusercontent.com/borestad/static-binaries/main/gron" && chmod +x gron)

  echo "::group::Github Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/github.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  echo "::group::Job Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/job.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  echo "::group::Steps Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/steps.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  echo "::group::Runner Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/runner.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  echo "::group::Strategy Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/strategy.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  echo "::group::Matrix Context"
  echo "::stop-commands::$TOKEN"
  gron -c $CONTEXT_DIR/matrix.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"


  echo "::group::Event"
  echo "::stop-commands::$TOKEN"
  gron -c "$GITHUB_EVENT_PATH" || true
  echo "::$TOKEN::"
  echo "::endgroup::"

}

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Formatters / Printers
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✨() {
  hr
  start=$(time-now)
  echo "✨ $1"
  echo
}

✓() { echo -e "✓ ${R} $1"; }

hr() {
  printf "\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n"
}

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# File system
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ROOT=$(realpath $(dirname $(dirname "$0")))

GIT_ROOT=$(git rev-parse --show-toplevel)

mk() {
  mkdir -pv -p "$@" && cd "$_"
}

mkt() {
  cd $(mktemp -d) && pwd
}

has-file-changed() {
  changed_files="$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD 2>/dev/null)"
  if $(echo "$changed_files" | grep --quiet "$1"); then
    return 0
  fi
  return 1
}

# Allow calling for methods from outside
$1
